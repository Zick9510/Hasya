### Archivo destinado a mostrar las capacidades de Hasya (recomiendo igual leer README.md, ya que ahí se encuentra la documentación)

### ASIGNAR

i = 3
mostrar(i)

i = 4
mostrar(i)

a, b = 3, 4
mostrar(a, b)

b, a = 5, 3
mostrar(a, b)

a = 2
b, c = i, 3

mostrar(a, b, c, i)

### CADENAS

mostrar(('cade' + 'na')*3)

cadena = 'te' + 'xto'
mostrar(cadena*2)

### CICLOS

### Para

lis = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
para i en lis:
    mostrar(lis, i)


lis2 = [[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12]]
mostrar(lis2)

para i, j en lis2:
    mostrar(i, j)

para i, j, k, l en lis2:
    mostrar(i, j, k, l)

### Cada

para i en lis2:
    cada j en i:
        j += 1

mostrar(lis2)
lis3 = lis

cada i en lis3:
    i = i**2 - 5*i + 4

mostrar(lis3)

### Mientras

i = 0
mientras i < largo(lis3):
    mostrar(lis3[i])
    i += 3

### Hace mientras

mostrar(lis)
i = 0

hace mientras i == 1:
    mostrar(lis[i])
    i += 1

### ESTRUCTURAS

### Condicionales
A1 = 1
A2 = 2
A3 = 3

si A1 <= A2:
    mostrar(A1, '<=', A2)

si A1 < A2 > A3:
    mostrar(A1, '<', A2, '>', A3)
sino si A1 <= A2 < A3:
    mostrar(A1, '<=', A2, '<', A3)
si A1 > A3:
    mostrar(A1, '>', A3)
sino si A2 > A3:
    mostrar(A2, '>', A3)
sino:
    mostrar('Ninguna')

### Capta/caso

capta A1:
    caso 1:
        mostrar(1)
    caso _:
        mostrar('_')

capta A1, A2:
    caso 1, 3:
        mostrar(1, 3)
    caso _, 1:
        mostrar('_', 1)
    caso _:
        mostrar('_')

capta A1, A2, A3:
    caso 1, 2, 4:
        mostrar(1, 2, 4)
        
    caso _, 2, _:
        mostrar('_', 2, '_')

### FUNCIONES

def func1():
    
    mostrar('En func1')
def func2():
    mostrar('En func2')

    retorno func1()
def func3(a):
    mostrar(a)
    retorno -1
mostrar(func2(), func3(2))


def func4(a, b):
    mostrar(a + b)
    func3(2)
    retorno a + b
mostrar(func4(4, 5))

### FUNCIONES INCORPORADAS

nombre = ingresar('Ingrese nombre: ')
mostrar('Ingrese apellido: ')
apellido = ingresar()

lis = matriz([2, 2], 1)
mostrar(lis)
lis[1] = [2, 2, 2, 2]
mostrar(largo(lis))
mostrar(invertir(lis), '<- lista invertida')

mostrar(rango(10), rango(3, 20), rango(4, 31, 4))

### LISTAS

lis = [1, 2, 3]
mostrar(lis[1])

lis += [4] 
mostrar(lis)

mat = matriz([10], 1)
mostrar(mat)

s = 10
mat[3] = 'mat de 3'
mat[4] = s

mat[1] = [3]
mat[0] = [2, 3, [4, 5, [6, 7, [8, 9]]]]

mostrar(mat)

mostrar(lis)
mostrar(lis[-2])

mat = [[1, 2, 3], [4, 5, 6]]

para i en rango(largo(mat)):
    para j en rango(largo(mat[0])):
        mostrar(mat[i][j])

### IMPORTAR

importar import1

var1 = 30
var2 = 40
var3 = 50

mostrar(var1, import1.var1)
mostrar(var2, import1.var2)
mostrar(var3, import1.var3)


mostrar('Si ves esto, Hasya cumplio con todos los Tests')
